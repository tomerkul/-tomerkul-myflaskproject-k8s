pipeline {
    agent any
    triggers {
        pollSCM('*/5 * * * *')
    }
    stages {
        stage('Cleanup') {
            steps {
                script {
                    env.ANSIBLE_IP = "192.168.56.101"
                }
                sh 'echo "Performing cleanup..."'
                sh 'pwd'
                sh 'sudo rm -rf *'
            }
        }
        stage('Clone') {
            steps {
                sh 'echo "Building..."'
                sh 'git clone https://github.com/tomerkul/tomerkul-myflaskproject-k8s.git'
                sh 'ls'
            }
        }

        stage('Upload to Docker Hub') {
            steps {
                        sh '''
                                   sudo python3 /var/lib/jenkins/workspace/first_pipeline-k8s/tomerkul-myflaskproject-k8s/sample-flask/del_old_ver.py
                                   cd /var/lib/jenkins/workspace/first_pipeline-k8s/tomerkul-myflaskproject-k8s/sample-flask/application
                                   sudo python3 findlastversion.py
                                   cd /var/lib/jenkins/workspace/first_pipeline-k8s/tomerkul-myflaskproject-k8s/sample-flask/db
                                   sudo python3 findlastversionSQl.py
                        '''
                    
                
            }
        }
        stage('Testing') {
                    steps {
                        sh 'kubectl config use-context rancher-desktop'
                        sh 'kubectl apply -f /var/lib/jenkins/workspace/first_pipeline-k8s/tomerkul-myflaskproject-k8s/k8sFiles/kubemyflask.yaml'
                    }
                }
        stage('Deploying') {
                    steps {
                        sh '''
                            gcloud config set project macro-aurora-393206
                            kubectl apply -f /var/lib/jenkins/workspace/first_pipeline-k8s/tomerkul-myflaskproject-k8s/k8sFiles/kubemyflask.yaml
                            kubectl rollout restart deployments
                        '''
    }
}

    }
}
