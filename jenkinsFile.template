pipeline {
    agent any
    triggers {
        pollSCM('*/5 * * * *')
    }

    stages {
        stage('Cleanup') {
            steps {
                sh 'echo "Performing cleanup..."'
                sh 'rm -rf *'
            }
        }

        stage('Clone') {
            steps {
                sh 'echo "Building..."'
                sh 'git clone https://github.com/tomerkul/myflaskproject.git'
                sh 'ls'
            }
        }

        stage('Build') {
            steps {
                sh 'echo "Building..."'
                sh 'echo "packaging"'
                sh 'tar -czvf myflaskproject.tar.gz myflaskproject'
                sh 'ls'
            }
        }

        stage("Upload to S3") {
            steps {
                withCredentials([
                    [
                        $class: 'AmazonWebServicesCredentialsBinding',
                        credentialsId: 'aws-jenkins',
                        accessKeyVariable: 'AWS_ACCESS_KEY_ID',
                        secretKeyVariable: 'AWS_SECRET_ACCESS_KEY'
                    ]
                ]) {
                    sh 'aws s3 cp myflaskproject.tar.gz s3://tomerkulsflask/myflask1'
                }
            }
        }

        stage('SSH Connection and Commands') {
            steps {
                withCredentials([sshUserPrivateKey(credentialsId: 'SSH_ec2', keyFileVariable: 'KEY_FILE')]) {
                    sshagent(['SSH_ec2']) {
                    sh """
                        ssh -i KEY_FILE ec2-user@3.86.181.255
                        sudo tar -xzf myflaskproject.tar.gz
                        rm -fr myflaskproject.tar.gz
                        ls
                    """
                }
            }
        }
    }
}
}
