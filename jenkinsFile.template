pipeline {
    agent any
    triggers {
        pollSCM('*/1 * * * *')
    }

    stages {
        stage('Cleanup') {
            steps {
                sh 'echo "Performing cleanup..."'
                sh 'rm -rf *'
            }
        }

        stage('Clone') {
            steps {
                sh 'echo "Building..."'
                sh 'git clone https://github.com/tomerkul/myflaskproject.git'
                sh 'ls'
            }
        }

        stage('Build') {
            steps {
                sh 'echo "Building..."'
                sh 'echo "packaging"'
                sh 'tar -czvf myflaskproject.tar.gz myflaskproject'
                sh 'ls'
            }
        }

        stage("Upload to S3") {
            steps {
                withCredentials([
                    [
                        $class: 'AmazonWebServicesCredentialsBinding',
                        credentialsId: 'aws-jenkins',
                        accessKeyVariable: 'AWS_ACCESS_KEY_ID',
                        secretKeyVariable: 'AWS_SECRET_ACCESS_KEY'
                    ]
                ]) {
                    sh 'aws s3 cp myflaskproject.tar.gz s3://tomerkulsflask/myflask1'
                }
            }
        }

        stage('SSH Connection and Commands') {
            steps {
                script {
                    // Establish SSH connection to remote host
                    sshCommand(
                        remote: [
                            host: '3.86.181.255', // Replace with the actual remote host
                            user: 'ec2-user', // Replace with the actual username
                            password: credentials('ssh_ec2') // Replace with the ID of your SSH credentials in Jenkins
                        ],
                        sudo tar -xzf myflaskproject.tar.gz
                        rm -fr myflaskproject.tar.gz
                        sudo bash /home/ec2-user/tests/myflaskproject/flaskrun.sh
                        sudo bash /home/ec2-user/tests/myflaskproject/tests.sh
                        """
                    )
                }
            }
        }
    }
}
