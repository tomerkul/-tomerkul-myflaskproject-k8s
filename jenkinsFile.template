pipeline {
    agent any
    triggers {
        pollSCM('*/5 * * * *')
    }

    stages {
        stage('Cleanup') {
            steps {
                script {
                    env.TEST_IP = "44.202.63.7"
                    env.ANSIBLE_IP = "192.168.56.101"
                }
                sh 'echo "Performing cleanup..."'
                sh 'rm -rf *'
            }
        }

        stage('Clone') {
            steps {
                sh 'echo "Building..."'
                sh 'git clone https://github.com/tomerkul/myflaskproject.git'
                sh 'ls'
            }
        }

        stage('Build') {
            steps {
                sh 'echo "Building..."'
                sh 'echo "packaging"'
                sh 'tar -czvf myflaskproject.tar.gz myflaskproject'
                sh 'ls'
            }
        }

        stage("Upload to S3") {
            steps {
                withCredentials([
                    [
                        $class: 'AmazonWebServicesCredentialsBinding',
                        credentialsId: 'aws-jenkins',
                        accessKeyVariable: 'AWS_ACCESS_KEY_ID',
                        secretKeyVariable: 'AWS_SECRET_ACCESS_KEY'
                    ]
                ]) {
                    sh 'aws s3 cp myflaskproject.tar.gz s3://tomerkulsflask/myflask1'
                }
            }
        }

        stage('Test') {
            steps {
                withCredentials([sshUserPrivateKey(credentialsId: 'SSH_ec2', keyFileVariable: 'KEY_FILE')]) {
                    withCredentials([
                        [
                            $class: 'AmazonWebServicesCredentialsBinding',
                            credentialsId: 'aws-jenkins',
                            accessKeyVariable: 'AWS_ACCESS_KEY_ID',
                            secretKeyVariable: 'AWS_SECRET_ACCESS_KEY'
                        ]
                    ]) {
                        sshagent(['SSH_ec2']) {
                            sh '''
                                sudo scp -i $KEY_FILE -o StrictHostKeyChecking=no myflaskproject.tar.gz ec2-user@$TEST_IP:/home/ec2-user/
                                ssh-keyscan $TEST_IP >> /var/lib/jenkins/.ssh/known_hosts
                                ssh -o StrictHostKeyChecking=no -i $KEY_FILE ec2-user@$TEST_IP '
                                    sudo tar -xzf myflaskproject.tar.gz
                                    rm -fr myflaskproject.tar.gz
                                    ls
                                    sudo bash /home/ec2-user/myflaskproject/flaskrun.sh > /dev/null 2>&1 & disown
                                    sleep 5
                                    sudo bash /home/ec2-user/myflaskproject/tests/tests.sh
                                    sudo bash /home/ec2-user/myflaskproject/flaskstop.sh
                                    exit
                                '
                            '''
                        }
                    }
                }
            }
        }

        stage('Deploy to Prodaction') {
            steps {
                withCredentials([sshUserPrivateKey(credentialsId: 'SSH_VM', keyFileVariable: 'KEY_FILE')]) { 
                    sshagent(['SSH_VM']) {
                        sh '''
                            sudo scp -i $KEY_FILE -o StrictHostKeyChecking=no myflaskproject.tar.gz tomer@$ANSIBLE_IP:/home/tomer/
                            sudo tar -xzf /home/tomer/myflaskproject.tar.gz -C /home/tomer/

                        '''
            }
        }
    }
}

    }
}
